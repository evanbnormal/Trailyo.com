generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String           @id @default(uuid())
  email        String           @unique
  name         String
  password     String
  avatar       String?
  confirmedAt  DateTime?
  createdAt    DateTime         @default(now())
  updatedAt    DateTime         @updatedAt
  analytics    AnalyticsEvent[]
  subscription Subscription?
  trails       Trail[]
}

model Trail {
  id                  String      @id @default(uuid())
  title               String
  description         String
  creatorId           String
  thumbnailUrl        String?
  status              String      @default("draft")
  trailValue          Float?
  suggestedInvestment Float?
  trailCurrency       String?     @default("USD")
  createdAt           DateTime    @default(now())
  updatedAt           DateTime    @updatedAt
  creator             User        @relation(fields: [creatorId], references: [id])
  steps               TrailStep[]
}

model TrailStep {
  id           String   @id @default(uuid())
  trailId      String
  title        String
  content      String
  order        Int
  type         String   @default("article")
  source       String?
  thumbnailUrl String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  trail        Trail    @relation(fields: [trailId], references: [id], onDelete: Cascade)
}

model AnalyticsEvent {
  id        String   @id @default(uuid())
  userId    String?
  event     String
  metadata  Json?
  createdAt DateTime @default(now())
  user      User?    @relation(fields: [userId], references: [id])
}

model TrailAnalyticsEvent {
  id        String   @id @default(uuid())
  trailId   String
  eventType String   // 'trail_view' | 'step_complete' | 'step_skip' | 'tip_donated' | 'trail_complete' | 'video_watch'
  data      Json?
  timestamp DateTime @default(now())
}

model ResetToken {
  id        String   @id @default(uuid())
  email     String
  token     String   @unique
  expires   DateTime
  createdAt DateTime @default(now())
}

model Subscription {
  id                   String    @id @default(uuid())
  userId               String    @unique
  stripeCustomerId     String
  stripeSubscriptionId String
  status               String
  planType             String    @default("creator")
  trialEnd             DateTime?
  currentPeriodEnd     DateTime?
  canceledAt           DateTime?
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt
  user                 User      @relation(fields: [userId], references: [id])
}
